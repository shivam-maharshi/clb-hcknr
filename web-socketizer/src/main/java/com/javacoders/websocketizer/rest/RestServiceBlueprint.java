package com.javacoders.websocketizer.rest;

import java.util.List;

import com.javacoders.websocketizer.Framework;
import com.javacoders.websocketizer.InputParam;
import com.javacoders.websocketizer.ServiceBlueprint;

/**
 * Represents a method uniquely identified by a URL.
 * 
 * @author shivam.maharshi
 */
public class RestServiceBlueprint implements ServiceBlueprint {

  private String endpoint;
  private String className;
  private String packageName;
  private String sourceDir;
  private String autogeneratedPath;
  private Framework framework;
  private List<InputParam> inputs;
  private RestRequestHandler requestHandler;
  private RestRequestContext requestContext;

  public RestServiceBlueprint(String endpoint, String className, List<InputParam> inputs, RestRequestHandler requestHandler,
      RestRequestContext requestContext) {
    super();
    this.endpoint = endpoint;
    this.className = className;
    this.inputs = inputs;
    this.requestHandler = requestHandler;
    this.requestContext = requestContext;
  }

  @Override
  public String getEndpoint() {
    return endpoint;
  }

  public void setEndpoint(String endpoint) {
    this.endpoint = endpoint;
  }

  @Override
  public String getClassName() {
    return className;
  }

  public void setClassName(String className) {
    this.className = className;
  }

  @Override
  public String getPackageName() {
    return packageName;
  }

  public void setPackageName(String packageName) {
    this.packageName = packageName;
  }

  @Override
  public String getSourceDir() {
    return sourceDir;
  }

  public void setSourceDir(String sourceDir) {
    this.sourceDir = sourceDir;
  }

  @Override
  public String getAutogeneratedPath() {
    return autogeneratedPath;
  }

  public void setAutogeneratedPath(String autogeneratedPath) {
    this.autogeneratedPath = autogeneratedPath;
  }

  @Override
  public Framework getFramework() {
    return framework;
  }

  public void setFramework(Framework framework) {
    this.framework = framework;
  }

  @Override
  public List<InputParam> getInputs() {
    return inputs;
  }

  public void setInputs(List<InputParam> inputs) {
    this.inputs = inputs;
  }

  @Override
  public RestRequestHandler getRequestHandler() {
    return requestHandler;
  }

  public void setRequestHandler(RestRequestHandler requestHandler) {
    this.requestHandler = requestHandler;
  }

  @Override
  public RestRequestContext getRequestContext() {
    return requestContext;
  }

  public void setRequestContext(RestRequestContext requestContext) {
    this.requestContext = requestContext;
  }
  
}
