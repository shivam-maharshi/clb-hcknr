  morphlines : [
  {
    id : morphline1
    importCommands : ["org.kitesdk.morphline.**", "com.ngdata.**"]

    commands : [                    
      {
        extractHBaseCells {
          mappings : [
            {
              inputColumn : "clean_tweet:clean_text"
              outputField : "clean_text_s" 
              type : string 
              source : value
            }
            {
              inputColumn : "clean_tweet:collection"
              outputField : "collection_name_s" 
              type : string 
              source : value
            }
            {
              inputColumn : "clean_tweet:hashtags"
              outputField : "hashtags_s" 
              type : string 
              source : value
            }
            {
              inputColumn : "clean_tweet:urls"
              outputField : "urls_s" 
              type : string
              source : value
            }

            {
              inputColumn : "clean_tweet:mentions"
              outputField : "mentions_s" 
              type : string
              source : value
            }
            {
              inputColumn : "clean_web:collection"
              outputField : "collection_name_s" 
              type : string
              source : value
            }
            {
              inputColumn : "clean_web:lang"
              outputField : "lang_s" 
              type : string
              source : value
            }
            {
              inputColumn : "clean_web:domain"
              outputField : "domain_s"      
              type : string
              source : value
            }
            {  
              inputColumn : "clean_web:text_clean_profanity"
              outputField : "clean_text_t"      
              type : string
              source : value
            }
            {
              inputColumn : "clean_web:title"
              outputField : "title_s"      
              type : string
              source : value
            }
            {
              inputColumn : "clean_web:urls"
              outputField : "urls_s"      
              type : string
              source : value
            }
            {
              inputColumn : "doctype:doctype"
              outputField : "doctype_s" 
              type : string
              source : value
            }
            {
              inputColumn : "tweet:archivesource"
              outputField : "archivesource_s" 
              type : string
              source : value
            }
            {
              inputColumn : "tweet:created_at"
              outputField : "created_at_s" 
              type : string
              source : value
            }
            {
              inputColumn : "tweet:from_user"
              outputField : "from_user_s" 
              type : string
              source : value
            }
            {
              inputColumn : "tweet:from_user_id"
              outputField : "from_user_id_s" 
              type : string
              source : value
            }
            {
              inputColumn : "tweet:tweet_id"
              outputField : "tweet_id_s" 
              type : string
              source : value
            }
            {
              inputColumn : "tweet:geo_coordinates_0"
              outputField : "latitude_f" 
              type : string
              source : value
            }
            {
              inputColumn : "tweet:geo_coordinates_1"
              outputField : "longitude_f" 
              type : string
              source : value
            }
            {
              inputColumn : "tweet:iso_language_code"
              outputField : "iso_lang_code_s" 
              type : string
              source : value
            }
            {
              inputColumn : "tweet:profile_image_url"
              outputField : "profile_image_url_s" 
              type : string
              source : value
            }
            {
              inputColumn : "tweet:source"
              outputField : "source_s" 
              type : string
              source : value
            }
            {
              inputColumn : "tweet:time"
              outputField : "time_s" 
              type : string
              source : value
            }
            {
              inputColumn : "tweet:to_user_id"
              outputField : "to_user_id_s" 
              type : string
              source : value
            }
            {
              inputColumn : "tweets_topics:probability_list"
              outputField : "topic_probability_list_s" 
              type : string
              source : value
            }
            {
              inputColumn : "tweets_topics:topic_label"
              outputField : "topic_label_s" 
              type : string
              source : value
            }
            {
              inputColumn : "cf_cf:sim_scores"
              outputField : "recommendation_sim_scores_s" 
              type : string
              source : value
            }
	    { 
              inputColumn : "cf_cf:sim_tweets"
              outputField : "recommendation_sim_docs_s"
              type : string
              source : value
            }
            {
              inputColumn : "clustered-tweets:cluster-label"
              outputField : "cluster_label_s" 
              type : string
              source : value
            }
            {
              inputColumn : "clustered-tweets:doc-probability"
              outputField : "cluster_probability_f" 
              type : string
              source : value
            }
	    {
              inputColumn : "classification:relevance"
              outputField : "classification_relevance_f"
              type : string
              source : value
            }
          ]
        }
      }
      # Split multiple values
      {
	split 
	    {
	      inputField : "topic_probability_list_s"
              outputField : "topic_probability_list_fs"
	      separator : ","
              isRegex : false
	      addEmptyStrings : false
	      trim : true
            }
      }
      {
	split 
	    {
	      inputField : "topic_label_s"
              outputField : "topic_label_ss"
	      separator : ","
              isRegex : false
	      addEmptyStrings : false
	      trim : true
            }
      }
      {
	split 
	    {
	      inputField : "recommendation_sim_scores_s"
              outputField : "recommendation_sim_scores_fs"
	      separator : ";"
              isRegex : false
	      addEmptyStrings : false
	      trim : true
            }
      }
      {
	split 
	    {
	      inputField : "recommendation_sim_docs_s"
              outputField : "recommendation_sim_docs_ss"
	      separator : ";"
              isRegex : false
	      addEmptyStrings : false
	      trim : true
            }
      }

      #for avro use with type : "byte[]" in extractHBaseCells mapping above
      #{ readAvroContainer {} } 
      #{ 
      #  extractAvroPaths {
      #    paths : { 
      #      data : /user_name      
      #    }
      #  }
      #}

      # convert timestamp field to native Solr timestamp format
      # such as 2012-09-06T07:14:34Z to 2012-09-06T07:14:34.000Z
      {
	convertTimestamp 
	  {
            field : time_s
	    inputFormats : ["unixTimeInSeconds"]
	    inputTimezone : UTC
	    outputFormat : "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'"
	    outputTimezone : UTC
	  }
      }	

      { logTrace { format : "output record: {}", args : ["@{}"] } }    
    ]
  }
]
